

#pragma once

#ifndef CLOUD1_H
#define CLOUD1_H

#include "Mesh.h"

class Cloud1 {
public:
	static Mesh init() {
		Mesh mesh;

		vertices(mesh);
		faces(mesh);

		return mesh;
	}

private:
	static void vertices(Mesh& mesh) {

		mesh.vertex({ -9.351f, -0.425f, -4.061f });
		mesh.vertex({ -7.839f, -1.179f, -4.421f });
		mesh.vertex({ -5.67f, -1.761f, -3.683f });
		mesh.vertex({ -6.303f, -0.444f, -5.564f });
		mesh.vertex({ -9.833f, -0.638f, -2.513f });
		mesh.vertex({ -9.788f, -0.34f, -0.719f });
		mesh.vertex({ -9.277f, -0.965f, 0.444f });
		mesh.vertex({ -7.418f, -1.848f, -2.27f });
		mesh.vertex({ -8.494f, -1.554f, -1.144f });
		mesh.vertex({ -6.324f, -2.477f, -1.167f });
		mesh.vertex({ -7.629f, -2.218f, 0.361f });
		mesh.vertex({ -8.006f, -0.887f, 2.643f });
		mesh.vertex({ -6.365f, -2.684f, 0.427f });
		mesh.vertex({ -6.32f, -2.266f, 2.057f });
		mesh.vertex({ -4.522f, -0.887f, -5.25f });
		mesh.vertex({ -3.024f, -1.842f, -3.87f });
		mesh.vertex({ -2.973f, -0.87f, -5.286f });
		mesh.vertex({ -1.321f, -0.832f, -5.365f });
		mesh.vertex({ 0.23f, -1.861f, -4.07f });
		mesh.vertex({ 0.281f, -0.753f, -4.992f });
		mesh.vertex({ -4.665f, -2.178f, -2.789f });
		mesh.vertex({ -4.662f, -2.661f, -1.165f });
		mesh.vertex({ -2.789f, -2.358f, -2.351f });
		mesh.vertex({ -4.844f, -2.786f, 0.847f });
		mesh.vertex({ -4.908f, -2.354f, 2.534f });
		mesh.vertex({ -3.023f, -2.611f, 0.499f });
		mesh.vertex({ -3.028f, -2.585f, 2.14f });
		mesh.vertex({ -1.439f, -2.192f, -2.974f });
		mesh.vertex({ -1.394f, -2.25f, -1.131f });
		mesh.vertex({ 0.245f, -2.159f, -2.78f });
		mesh.vertex({ 0.253f, -2.266f, -1.119f });
		mesh.vertex({ -1.387f, -2.603f, 0.5f });
		mesh.vertex({ -1.396f, -2.775f, 2.137f });
		mesh.vertex({ 0.244f, -2.764f, 0.49f });
		mesh.vertex({ 0.228f, -3.11f, 2.127f });
		mesh.vertex({ -4.59f, -1.949f, 3.746f });
		mesh.vertex({ -5.62f, -0.919f, 5.013f });
		mesh.vertex({ -3.037f, -2.302f, 3.79f });
		mesh.vertex({ -3.469f, -1.155f, 6.269f });
		mesh.vertex({ -1.399f, -2.617f, 3.782f });
		mesh.vertex({ -1.474f, -2.08f, 5.523f });
		mesh.vertex({ 0.234f, -2.951f, 3.788f });
		mesh.vertex({ 0.237f, -2.487f, 5.426f });
		mesh.vertex({ -2.139f, -0.965f, 7.554f });
		mesh.vertex({ -1.216f, -0.29f, 8.81f });
		mesh.vertex({ 0.313f, -1.927f, 7.056f });
		mesh.vertex({ 0.321f, -1.36f, 8.587f });
		mesh.vertex({ 0.431f, -0.621f, 10.498f });
		mesh.vertex({ -11.007f, 1.192f, -4.532f });
		mesh.vertex({ -9.159f, 1.662f, -3.663f });
		mesh.vertex({ -7.5f, 0.317f, -5.654f });
		mesh.vertex({ -6.275f, 1.337f, -4.771f });
		mesh.vertex({ -11.682f, 1.145f, -2.901f });
		mesh.vertex({ -10.43f, 1.024f, -0.978f });
		mesh.vertex({ -8.786f, 0.065f, 1.365f });
		mesh.vertex({ -7.628f, 1.51f, -2.802f });
		mesh.vertex({ -8.228f, 1.474f, -1.12f });
		mesh.vertex({ -6.296f, 1.607f, -3.158f });
		mesh.vertex({ -6.306f, 1.857f, -1.141f });
		mesh.vertex({ -7.255f, 1.638f, -0.02f });
		mesh.vertex({ -6.404f, 1.378f, 2.167f });
		mesh.vertex({ -5.136f, 0.379f, -5.412f });
		mesh.vertex({ -2.991f, 0.776f, -4.413f });
		mesh.vertex({ -1.381f, 0.406f, -4.116f });
		mesh.vertex({ 0.255f, 0.26f, -3.981f });
		mesh.vertex({ -4.659f, 1.526f, -3.469f });
		mesh.vertex({ -4.689f, 2.423f, -1.057f });
		mesh.vertex({ -3.231f, 1.641f, -3.249f });
		mesh.vertex({ -3.199f, 2.766f, -1.136f });
		mesh.vertex({ -4.672f, 2.166f, 0.526f });
		mesh.vertex({ -4.662f, 1.767f, 1.797f });
		mesh.vertex({ -2.257f, 2.192f, 0.364f });
		mesh.vertex({ -3.031f, 1.65f, 2.187f });
		mesh.vertex({ -1.136f, 1.225f, -2.774f });
		mesh.vertex({ -0.113f, 1.363f, -1.418f });
		mesh.vertex({ -1.394f, 1.919f, 2.137f });
		mesh.vertex({ 0.247f, 1.876f, 0.501f });
		mesh.vertex({ 0.244f, 2.084f, 2.13f });
		mesh.vertex({ -7.114f, 0.468f, 2.915f });
		mesh.vertex({ -4.407f, 0.384f, 5.034f });
		mesh.vertex({ -3.022f, 1.357f, 3.831f });
		mesh.vertex({ -3.25f, 0.618f, 5.732f });
		mesh.vertex({ -1.962f, 1.398f, 5.402f });
		mesh.vertex({ 0.245f, 2.08f, 3.77f });
		mesh.vertex({ 0.245f, 2.209f, 5.404f });
		mesh.vertex({ -2.139f, 0.794f, 7.382f });
		mesh.vertex({ -1.005f, 1.871f, 7.046f });
		mesh.vertex({ -0.926f, 1.712f, 8.481f });
		mesh.vertex({ 0.256f, 2.535f, 6.96f });
		mesh.vertex({ -0.849f, 0.747f, 9.651f });
		mesh.vertex({ 0.36f, 2.115f, 10.243f });
		mesh.vertex({ 1.898f, -0.845f, -4.831f });
		mesh.vertex({ 3.334f, -1.116f, -4.687f });
		mesh.vertex({ 5.173f, -1.464f, -4.552f });
		mesh.vertex({ 6.839f, -1.201f, -4.061f });
		mesh.vertex({ 1.879f, -2.259f, -2.778f });
		mesh.vertex({ 1.887f, -2.445f, -1.127f });
		mesh.vertex({ 3.465f, -2.521f, -2.898f });
		mesh.vertex({ 3.519f, -2.543f, -1.134f });
		mesh.vertex({ 1.88f, -2.912f, 0.489f });
		mesh.vertex({ 1.879f, -3.211f, 2.129f });
		mesh.vertex({ 3.519f, -2.941f, 0.49f });
		mesh.vertex({ 3.521f, -3.243f, 2.128f });
		mesh.vertex({ 5.139f, -2.588f, -3.01f });
		mesh.vertex({ 5.148f, -2.412f, -1.137f });
		mesh.vertex({ 5.196f, -0.815f, -3.111f });
		mesh.vertex({ 6.858f, -2.553f, -2.976f });
		mesh.vertex({ 6.425f, -0.516f, -2.178f });
		mesh.vertex({ 5.153f, -2.767f, 0.5f });
		mesh.vertex({ 5.216f, -3.164f, 2.243f });
		mesh.vertex({ 6.796f, -2.554f, 0.494f });
		mesh.vertex({ 7.021f, -2.736f, 2.788f });
		mesh.vertex({ 7.987f, -1.895f, -4.063f });
		mesh.vertex({ 8.436f, -2.091f, -1.135f });
		mesh.vertex({ 8.541f, -0.454f, -0.689f });
		mesh.vertex({ 9.307f, -1.725f, -2.87f });
		mesh.vertex({ 8.439f, -2.108f, 0.498f });
		mesh.vertex({ 8.484f, -2.245f, 2.148f });
		mesh.vertex({ 9.982f, -0.959f, 0.331f });
		mesh.vertex({ 12.314f, -0.475f, 0.362f });
		mesh.vertex({ 11.362f, -0.436f, 1.735f });
		mesh.vertex({ 1.875f, -3.145f, 3.792f });
		mesh.vertex({ 1.884f, -2.622f, 5.402f });
		mesh.vertex({ 3.521f, -3.228f, 3.804f });
		mesh.vertex({ 3.519f, -2.731f, 5.425f });
		mesh.vertex({ 1.887f, -2.087f, 7.031f });
		mesh.vertex({ 3.519f, -2.229f, 7.059f });
		mesh.vertex({ 3.534f, -1.625f, 9.069f });
		mesh.vertex({ 5.176f, -3.029f, 3.792f });
		mesh.vertex({ 5.166f, -2.564f, 5.426f });
		mesh.vertex({ 5.111f, -1.921f, 7.056f });
		mesh.vertex({ 5.781f, -0.94f, 9.215f });
		mesh.vertex({ 6.381f, -1.849f, 6.537f });
		mesh.vertex({ 7.474f, -1.03f, 7.481f });
		mesh.vertex({ 1.686f, -1.073f, 10.822f });
		mesh.vertex({ 3.601f, -0.818f, 10.775f });
		mesh.vertex({ 4.873f, -0.718f, 10.441f });
		mesh.vertex({ 8.45f, -1.963f, 3.643f });
		mesh.vertex({ 7.928f, -1.88f, 5.022f });
		mesh.vertex({ 9.931f, -1.593f, 2.171f });
		mesh.vertex({ 9.515f, -0.442f, 4.883f });
		mesh.vertex({ 2.714f, -0.059f, -3.594f });
		mesh.vertex({ 1.889f, 0.616f, -2.806f });
		mesh.vertex({ 1.885f, 1.363f, -1.353f });
		mesh.vertex({ 3.545f, 1.349f, -1.047f });
		mesh.vertex({ 1.884f, 1.93f, 0.485f });
		mesh.vertex({ 1.882f, 2.13f, 2.132f });
		mesh.vertex({ 3.539f, 1.813f, 0.388f });
		mesh.vertex({ 3.522f, 2.189f, 2.12f });
		mesh.vertex({ 5.041f, 0.65f, -1.779f });
		mesh.vertex({ 5.155f, 1.461f, 0.01f });
		mesh.vertex({ 5.182f, 2.09f, 2.114f });
		mesh.vertex({ 7.25f, 1.547f, 2.133f });
		mesh.vertex({ 6.123f, 1.64f, 1.099f });
		mesh.vertex({ 7.403f, 0.564f, -1.077f });
		mesh.vertex({ 10.092f, 0.868f, -1.351f });
		mesh.vertex({ 10.801f, 1.619f, -0.412f });
		mesh.vertex({ 8.423f, 1.184f, 0.327f });
		mesh.vertex({ 8.612f, 1.352f, 2.578f });
		mesh.vertex({ 10.144f, 1.424f, 1.038f });
		mesh.vertex({ 12.405f, 1.001f, -2.278f });
		mesh.vertex({ 13.497f, 1.255f, 1.315f });
		mesh.vertex({ 11.839f, 0.71f, 2.352f });
		mesh.vertex({ 1.882f, 2.245f, 3.769f });
		mesh.vertex({ 1.881f, 2.571f, 5.39f });
		mesh.vertex({ 3.515f, 2.162f, 3.779f });
		mesh.vertex({ 3.515f, 2.466f, 5.414f });
		mesh.vertex({ 2.048f, 3.074f, 6.968f });
		mesh.vertex({ 1.938f, 3.247f, 8.852f });
		mesh.vertex({ 3.549f, 2.957f, 7.005f });
		mesh.vertex({ 3.616f, 3.11f, 8.547f });
		mesh.vertex({ 5.156f, 2.051f, 3.769f });
		mesh.vertex({ 5.126f, 2.233f, 5.325f });
		mesh.vertex({ 7.352f, 1.466f, 5.492f });
		mesh.vertex({ 6.56f, 1.697f, 3.77f });
		mesh.vertex({ 6.124f, 0.709f, 9.581f });
		mesh.vertex({ 4.965f, 2.463f, 6.766f });
		mesh.vertex({ 5.422f, 2.296f, 8.787f });
		mesh.vertex({ 6.282f, 1.74f, 7.042f });
		mesh.vertex({ 1.434f, 0.802f, 11.18f });
		mesh.vertex({ 1.706f, 2.639f, 10.623f });
		mesh.vertex({ 2.859f, 1.648f, 11.213f });
		mesh.vertex({ 4.936f, 2.04f, 10.209f });
		mesh.vertex({ 8.8f, 0.769f, 5.606f });
		mesh.vertex({ 10.217f, 0.513f, 3.463f });
		mesh.vertex({ 8.096f, 0.588f, 6.723f });


	}

	static void faces(Mesh& mesh) {

		mesh.face({ {50, 3, 2, 1} });
		mesh.face({ {10, 13, 11, 6} });
		mesh.face({ {10, 12, 13} });
		mesh.face({ {4, 7, 8, 5} });
		mesh.face({ {7, 10, 6, 8} });
		mesh.face({ {7, 9, 12, 10} });
		mesh.face({ {5, 8, 6} });
		mesh.face({ {2, 14, 16, 15} });
		mesh.face({ {27, 17, 19, 18} });
		mesh.face({ {15, 16, 17, 27} });
		mesh.face({ {20, 22, 21} });
		mesh.face({ {23, 25, 26, 24} });
		mesh.face({ {27, 29, 30, 28} });
		mesh.face({ {31, 33, 34, 32} });
		mesh.face({ {22, 27, 28} });
		mesh.face({ {25, 31, 32, 26} });
		mesh.face({ {21, 22, 25, 23} });
		mesh.face({ {28, 30, 33, 31} });
		mesh.face({ {22, 28, 31, 25} });
		mesh.face({ {3, 14, 2} });
		mesh.face({ {7, 20, 21, 9} });
		mesh.face({ {12, 23, 24, 13} });
		mesh.face({ {9, 21, 23, 12} });
		mesh.face({ {1, 2, 7} });
		mesh.face({ {0, 1, 7, 4} });
		mesh.face({ {2, 15, 22, 20} });
		mesh.face({ {27, 18, 29} });
		mesh.face({ {15, 27, 22} });
		mesh.face({ {2, 20, 7} });
		mesh.face({ {37, 38, 36, 35} });
		mesh.face({ {39, 41, 42, 40} });
		mesh.face({ {43, 45, 46, 44} });
		mesh.face({ {45, 43, 40} });
		mesh.face({ {37, 39, 40} });
		mesh.face({ {40, 38, 37} });
		mesh.face({ {40, 42, 45} });
		mesh.face({ {38, 40, 43} });
		mesh.face({ {35, 36, 13} });
		mesh.face({ {44, 46, 47} });
		mesh.face({ {48, 49, 55, 50} });
		mesh.face({ {52, 53, 56, 49} });
		mesh.face({ {56, 58, 57, 55} });
		mesh.face({ {54, 60, 59} });
		mesh.face({ {56, 55, 49} });
		mesh.face({ {56, 54, 59} });
		mesh.face({ {59, 58, 56} });
		mesh.face({ {54, 56, 53} });
		mesh.face({ {66, 68, 67, 65} });
		mesh.face({ {70, 72, 71, 69} });
		mesh.face({ {80, 72, 70} });
		mesh.face({ {75, 77, 76, 71} });
		mesh.face({ {68, 74, 73, 67} });
		mesh.face({ {72, 75, 71} });
		mesh.face({ {69, 71, 68, 66} });
		mesh.face({ {71, 76, 74} });
		mesh.face({ {71, 74, 68} });
		mesh.face({ {51, 61, 50} });
		mesh.face({ {58, 66, 65, 57} });
		mesh.face({ {60, 70, 69, 59} });
		mesh.face({ {59, 69, 66, 58} });
		mesh.face({ {48, 52, 49} });
		mesh.face({ {55, 57, 51, 50} });
		mesh.face({ {65, 67, 62, 61} });
		mesh.face({ {73, 64, 63} });
		mesh.face({ {67, 73, 63, 62} });
		mesh.face({ {57, 65, 61, 51} });
		mesh.face({ {79, 81, 80} });
		mesh.face({ {82, 84, 83, 80} });
		mesh.face({ {85, 44, 87, 86} });
		mesh.face({ {87, 88, 86} });
		mesh.face({ {81, 82, 80} });
		mesh.face({ {82, 85, 86} });
		mesh.face({ {86, 88, 84, 82} });
		mesh.face({ {81, 85, 82} });
		mesh.face({ {87, 89, 90} });
		mesh.face({ {89, 87, 44} });
		mesh.face({ {95, 97, 98, 96} });
		mesh.face({ {99, 101, 102, 100} });
		mesh.face({ {103, 106, 104} });
		mesh.face({ {108, 110, 111, 109} });
		mesh.face({ {97, 103, 104, 98} });
		mesh.face({ {101, 108, 109, 102} });
		mesh.face({ {96, 98, 101, 99} });
		mesh.face({ {104, 106, 110, 108} });
		mesh.face({ {98, 104, 108, 101} });
		mesh.face({ {115, 114, 113} });
		mesh.face({ {112, 115, 113} });
		mesh.face({ {118, 139, 117, 116} });
		mesh.face({ {118, 119, 120, 139} });
		mesh.face({ {114, 118, 116, 113} });
		mesh.face({ {114, 119, 118} });
		mesh.face({ {106, 112, 113} });
		mesh.face({ {107, 114, 115} });
		mesh.face({ {110, 116, 117, 111} });
		mesh.face({ {106, 113, 116, 110} });
		mesh.face({ {91, 92, 97, 95} });
		mesh.face({ {93, 94, 106, 103} });
		mesh.face({ {105, 107, 94, 93} });
		mesh.face({ {92, 93, 103, 97} });
		mesh.face({ {141, 105, 93, 92} });
		mesh.face({ {94, 115, 112} });
		mesh.face({ {94, 112, 106} });
		mesh.face({ {107, 115, 94} });
		mesh.face({ {121, 123, 124, 122} });
		mesh.face({ {126, 127, 125} });
		mesh.face({ {128, 111, 132, 129} });
		mesh.face({ {130, 133, 131} });
		mesh.face({ {132, 133, 130} });
		mesh.face({ {123, 128, 129, 124} });
		mesh.face({ {130, 131, 127, 126} });
		mesh.face({ {122, 124, 126, 125} });
		mesh.face({ {129, 132, 130} });
		mesh.face({ {124, 129, 130, 126} });
		mesh.face({ {137, 140, 138} });
		mesh.face({ {137, 139, 140} });
		mesh.face({ {117, 139, 137} });
		mesh.face({ {111, 137, 138, 132} });
		mesh.face({ {138, 140, 132} });
		mesh.face({ {132, 140, 133} });
		mesh.face({ {127, 135, 134} });
		mesh.face({ {127, 131, 136, 135} });
		mesh.face({ {143, 144, 141, 142} });
		mesh.face({ {146, 148, 147, 145} });
		mesh.face({ {153, 151, 152} });
		mesh.face({ {151, 153, 150} });
		mesh.face({ {144, 149, 141} });
		mesh.face({ {148, 151, 150, 147} });
		mesh.face({ {144, 147, 150} });
		mesh.face({ {145, 147, 144, 143} });
		mesh.face({ {150, 153, 107, 149} });
		mesh.face({ {144, 150, 149} });
		mesh.face({ {158, 162, 159, 157} });
		mesh.face({ {155, 156, 160} });
		mesh.face({ {162, 161, 159} });
		mesh.face({ {161, 156, 159} });
		mesh.face({ {155, 159, 156} });
		mesh.face({ {157, 159, 155, 154} });
		mesh.face({ {156, 161, 160} });
		mesh.face({ {152, 158, 157, 153} });
		mesh.face({ {153, 157, 154, 107} });
		mesh.face({ {164, 166, 165, 163} });
		mesh.face({ {168, 170, 169, 167} });
		mesh.face({ {172, 173, 174, 171} });
		mesh.face({ {178, 177, 175, 185} });
		mesh.face({ {177, 178, 176} });
		mesh.face({ {166, 172, 171, 165} });
		mesh.face({ {170, 177, 176, 169} });
		mesh.face({ {167, 169, 166, 164} });
		mesh.face({ {173, 178, 185} });
		mesh.face({ {176, 178, 173, 172} });
		mesh.face({ {169, 176, 172, 166} });
		mesh.face({ {179, 181, 180} });
		mesh.face({ {183, 140, 184, 158} });
		mesh.face({ {173, 183, 158, 174} });
		mesh.face({ {185, 183, 173} });
		mesh.face({ {180, 181, 170, 168} });
		mesh.face({ {177, 182, 175} });
		mesh.face({ {181, 182, 177, 170} });
		mesh.face({ {18, 19, 91} });
		mesh.face({ {29, 95, 96, 30} });
		mesh.face({ {33, 99, 100, 34} });
		mesh.face({ {30, 96, 99, 33} });
		mesh.face({ {18, 91, 95, 29} });
		mesh.face({ {41, 121, 122, 42} });
		mesh.face({ {125, 127, 46, 45} });
		mesh.face({ {42, 122, 125, 45} });
		mesh.face({ {46, 127, 134, 47} });
		mesh.face({ {74, 143, 142, 73} });
		mesh.face({ {77, 146, 145, 76} });
		mesh.face({ {76, 145, 143, 74} });
		mesh.face({ {73, 142, 141, 64} });
		mesh.face({ {84, 164, 163, 83} });
		mesh.face({ {87, 168, 167, 88} });
		mesh.face({ {88, 167, 164, 84} });
		mesh.face({ {179, 180, 90, 89} });
		mesh.face({ {90, 180, 168, 87} });
		mesh.face({ {0, 48, 50, 1} });
		mesh.face({ {61, 14, 3} });
		mesh.face({ {14, 61, 62, 16} });
		mesh.face({ {17, 63, 64, 19} });
		mesh.face({ {16, 62, 63, 17} });
		mesh.face({ {4, 5, 53, 52} });
		mesh.face({ {5, 6, 54, 53} });
		mesh.face({ {11, 54, 6} });
		mesh.face({ {0, 4, 52, 48} });
		mesh.face({ {3, 50, 61} });
		mesh.face({ {91, 141, 92} });
		mesh.face({ {105, 149, 107} });
		mesh.face({ {141, 149, 105} });
		mesh.face({ {114, 154, 155} });
		mesh.face({ {161, 162, 120, 119} });
		mesh.face({ {160, 161, 119} });
		mesh.face({ {114, 155, 160, 119} });
		mesh.face({ {120, 162, 139} });
		mesh.face({ {107, 154, 114} });
		mesh.face({ {36, 78, 11} });
		mesh.face({ {38, 81, 79, 36} });
		mesh.face({ {43, 44, 85} });
		mesh.face({ {43, 85, 81, 38} });
		mesh.face({ {47, 89, 44} });
		mesh.face({ {36, 79, 78} });
		mesh.face({ {185, 175, 131, 133} });
		mesh.face({ {184, 140, 139} });
		mesh.face({ {183, 185, 133, 140} });
		mesh.face({ {135, 181, 179, 134} });
		mesh.face({ {136, 182, 181, 135} });
		mesh.face({ {175, 182, 136, 131} });
		mesh.face({ {13, 36, 11} });
		mesh.face({ {24, 26, 37, 35} });
		mesh.face({ {32, 34, 41, 39} });
		mesh.face({ {26, 32, 39, 37} });
		mesh.face({ {13, 24, 35} });
		mesh.face({ {78, 60, 54} });
		mesh.face({ {79, 80, 70} });
		mesh.face({ {80, 83, 77, 75} });
		mesh.face({ {80, 75, 72} });
		mesh.face({ {78, 79, 70, 60} });
		mesh.face({ {100, 102, 123, 121} });
		mesh.face({ {109, 111, 128} });
		mesh.face({ {102, 109, 128, 123} });
		mesh.face({ {111, 117, 137} });
		mesh.face({ {163, 165, 148, 146} });
		mesh.face({ {151, 174, 152} });
		mesh.face({ {171, 174, 151} });
		mesh.face({ {165, 171, 151, 148} });
		mesh.face({ {158, 184, 162} });
		mesh.face({ {174, 158, 152} });
		mesh.face({ {11, 78, 54} });
		mesh.face({ {162, 184, 139} });
		mesh.face({ {34, 100, 121, 41} });
		mesh.face({ {83, 163, 146, 77} });
		mesh.face({ {19, 64, 141, 91} });
		mesh.face({ {134, 179, 89, 47} });


	}

};

#endif
